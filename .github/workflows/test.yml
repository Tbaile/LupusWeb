name: Testing
on:
  pull_request:
    branches:
      - develop
    paths-ignore:
      - '.idea/**'
      - '.editorconfg'
      - '.env.example'
      - '.gitattributes'
      - '.gitignore'
      - '.lando.yml'
      - '.nvmrc'
      - '.styleci.yml'
      - 'renovate.json'
      - 'README.md'
      - 'phpstan.neon.dist'
  workflow_call:
env:
  repository: tbaile/lupus-api
jobs:
  test-app-image:
    name: Test app image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Create new buildx builder
        uses: docker/setup-buildx-action@v2
      - name: Generate cache-from tags
        uses: docker/metadata-action@v4
        id: meta-cache-from
        with:
          images: |
            ${{ env.repository }}-app
          tags: |
            type=raw,value=develop
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=false
            suffix=-cache
      - name: Transform cache tags
        id: bake-cache
        run: |
          cache_from_file="$(mktemp)"
          jq '{ "target": { "testing": { "cache-from": ."target"."docker-metadata-action"."tags" | map_values("type=registry,ref=" + .) } } }' ${{ steps.meta-cache-from.outputs.bake-file }} > "$cache_from_file"
          echo "::set-output name=cache-from::$cache_from_file"
      - name: Build testing target
        uses: docker/bake-action@v2.2.0
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.bake-cache.outputs.cache-from }}
          targets: testing
          set: |
            *.platform=linux/arm64,linux/amd64
